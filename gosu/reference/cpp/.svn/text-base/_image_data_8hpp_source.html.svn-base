<html>
	<head>
		<title>Gosu C++ Reference</title>
		<link rel="stylesheet" href="cpp.css" type="text/css" charset="utf-8">
	</head>
	<body>
	<div class="everything">
<!-- Generated by Doxygen 1.5.9 -->
<script type="text/javascript">
<!--
function changeDisplayState (e){
  var num=this.id.replace(/[^[0-9]/g,'');
  var button=this.firstChild;
  var sectionDiv=document.getElementById('dynsection'+num);
  if (sectionDiv.style.display=='none'||sectionDiv.style.display==''){
    sectionDiv.style.display='block';
    button.src='open.gif';
  }else{
    sectionDiv.style.display='none';
    button.src='closed.gif';
  }
}
function initDynSections(){
  var divs=document.getElementsByTagName('div');
  var sectionCounter=1;
  for(var i=0;i<divs.length-1;i++){
    if(divs[i].className=='dynheader'&&divs[i+1].className=='dynsection'){
      var header=divs[i];
      var section=divs[i+1];
      var button=header.firstChild;
      if (button!='IMG'){
        divs[i].insertBefore(document.createTextNode(' '),divs[i].firstChild);
        button=document.createElement('img');
        divs[i].insertBefore(button,divs[i].firstChild);
      }
      header.style.cursor='pointer';
      header.onclick=changeDisplayState;
      header.id='dynheader'+sectionCounter;
      button.src='closed.gif';
      section.id='dynsection'+sectionCounter;
      section.style.display='none';
      section.style.marginLeft='14px';
      sectionCounter++;
    }
  }
}
window.onload = initDynSections;
-->
</script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.html"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.html"><span>File&nbsp;Members</span></a></li>
    </ul>
  </div>
<h1>ImageData.hpp</h1><a href="_image_data_8hpp.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 
<a name="l00003"></a>00003 
<a name="l00004"></a>00004 <span class="preprocessor">#ifndef GOSU_IMAGEDATA_HPP</span>
<a name="l00005"></a>00005 <span class="preprocessor"></span><span class="preprocessor">#define GOSU_IMAGEDATA_HPP</span>
<a name="l00006"></a>00006 <span class="preprocessor"></span>
<a name="l00007"></a>00007 <span class="preprocessor">#include &lt;<a class="code" href="_color_8hpp.html" title="Interface of the Color class.">Gosu/Color.hpp</a>&gt;</span>
<a name="l00008"></a>00008 <span class="preprocessor">#include &lt;<a class="code" href="_graphics_base_8hpp.html" title="Contains general typedefs and enums related to graphics.">Gosu/GraphicsBase.hpp</a>&gt;</span>
<a name="l00009"></a>00009 <span class="preprocessor">#include &lt;boost/optional.hpp&gt;</span>
<a name="l00010"></a>00010 <span class="preprocessor">#include &lt;boost/utility.hpp&gt;</span>
<a name="l00011"></a>00011 
<a name="l00012"></a>00012 <span class="keyword">namespace </span>Gosu
<a name="l00013"></a>00013 {
<a name="l00017"></a><a class="code" href="struct_gosu_1_1_g_l_tex_info.html">00017</a>     <span class="keyword">struct </span><a class="code" href="struct_gosu_1_1_g_l_tex_info.html" title="Contains information about the underlying OpenGL texture and the u/v space used for...">GLTexInfo</a>
<a name="l00018"></a>00018     {
<a name="l00019"></a><a class="code" href="struct_gosu_1_1_g_l_tex_info.html#648c5f3e307c6851514290c5e5978533">00019</a>         <span class="keywordtype">int</span> <a class="code" href="struct_gosu_1_1_g_l_tex_info.html#648c5f3e307c6851514290c5e5978533">texName</a>;
<a name="l00020"></a><a class="code" href="struct_gosu_1_1_g_l_tex_info.html#13909ebbf7d734fe10639257bd3895b8">00020</a>         <span class="keywordtype">float</span> <a class="code" href="struct_gosu_1_1_g_l_tex_info.html#cf46731ba12ef5814bcb273dcd8f08dd">left</a>, <a class="code" href="struct_gosu_1_1_g_l_tex_info.html#1ba53388c303103b12578f665d3f523f">right</a>, <a class="code" href="struct_gosu_1_1_g_l_tex_info.html#13909ebbf7d734fe10639257bd3895b8">top</a>, <a class="code" href="struct_gosu_1_1_g_l_tex_info.html#9e32f17c4a1a84fd5ac7311307e5486c">bottom</a>;
<a name="l00021"></a>00021     };
<a name="l00022"></a>00022 
<a name="l00028"></a><a class="code" href="class_gosu_1_1_image_data.html">00028</a>     <span class="keyword">class </span><a class="code" href="class_gosu_1_1_image_data.html" title="The ImageData class is an abstract base class for drawable images.">ImageData</a> : boost::noncopyable
<a name="l00029"></a>00029     {
<a name="l00030"></a>00030     <span class="keyword">public</span>:
<a name="l00031"></a><a class="code" href="class_gosu_1_1_image_data.html#8bc105f4bf822770692df6717d0f15ea">00031</a>         <span class="keyword">virtual</span> <a class="code" href="class_gosu_1_1_image_data.html#8bc105f4bf822770692df6717d0f15ea">~ImageData</a>()
<a name="l00032"></a>00032         {
<a name="l00033"></a>00033         }
<a name="l00034"></a>00034 
<a name="l00035"></a>00035         <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <a class="code" href="class_gosu_1_1_image_data.html#e841d572afc6b096fcda052296acd297">width</a>() <span class="keyword">const</span> = 0;
<a name="l00036"></a>00036         <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <a class="code" href="class_gosu_1_1_image_data.html#792312627eab901702e7236b91a1f2a8">height</a>() <span class="keyword">const</span> = 0;
<a name="l00037"></a>00037 
<a name="l00038"></a>00038         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="class_gosu_1_1_image_data.html#23f7dce3f5474b07a0a7b76e7dcb6d89">draw</a>(<span class="keywordtype">double</span> x1, <span class="keywordtype">double</span> y1, <a class="code" href="class_gosu_1_1_color.html" title="Represents an ARGB color value with 8 bits for each channel.">Color</a> c1,
<a name="l00039"></a>00039             <span class="keywordtype">double</span> x2, <span class="keywordtype">double</span> y2, <a class="code" href="class_gosu_1_1_color.html" title="Represents an ARGB color value with 8 bits for each channel.">Color</a> c2,
<a name="l00040"></a>00040             <span class="keywordtype">double</span> x3, <span class="keywordtype">double</span> y3, <a class="code" href="class_gosu_1_1_color.html" title="Represents an ARGB color value with 8 bits for each channel.">Color</a> c3,
<a name="l00041"></a>00041             <span class="keywordtype">double</span> x4, <span class="keywordtype">double</span> y4, <a class="code" href="class_gosu_1_1_color.html" title="Represents an ARGB color value with 8 bits for each channel.">Color</a> c4,
<a name="l00042"></a>00042             <a class="code" href="namespace_gosu.html#a2fd8fe9574c0ad3fd52557cb160be49" title="Represents the Z position of something drawn with Gosu&amp;#39;s graphics system.">ZPos</a> z, <a class="code" href="namespace_gosu.html#769656b1f560bc3d1bbdb47f8ca4eda9" title="Determines the way colors are combined when one is drawn onto another.">AlphaMode</a> mode) <span class="keyword">const</span> = 0;
<a name="l00043"></a>00043             
<a name="l00044"></a>00044         <span class="keyword">virtual</span> boost::optional&lt;GLTexInfo&gt; <a class="code" href="class_gosu_1_1_image_data.html#7c267460374172a2edf46480100d497d">glTexInfo</a>() <span class="keyword">const</span> = 0;
<a name="l00045"></a>00045         <span class="keyword">virtual</span> <a class="code" href="class_gosu_1_1_bitmap.html" title="Rectangular area of pixels, each represented by a Color value.">Bitmap</a> <a class="code" href="class_gosu_1_1_image_data.html#09968ec7a35cf2597ca75542cae6bac5">toBitmap</a>() <span class="keyword">const</span> = 0;
<a name="l00046"></a>00046         
<a name="l00048"></a>00048         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="class_gosu_1_1_image_data.html#11301c1335d82e4709c321a2da8ec540" title="Experimental and undocumented for now.">insert</a>(<span class="keyword">const</span> <a class="code" href="class_gosu_1_1_bitmap.html" title="Rectangular area of pixels, each represented by a Color value.">Bitmap</a>&amp; bitmap, <span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y) = 0;
<a name="l00049"></a>00049     };
<a name="l00050"></a>00050 }
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 <span class="preprocessor">#endif</span>
</pre></div></div>
		<p class="footer">Documentation not clear enough? Please go to one of the places listed on <a href="http://www.libgosu.org/">http://www.libgosu.org/</a> and leave feedback. Thanks!</p>
		</div>
	</body>
</html>
