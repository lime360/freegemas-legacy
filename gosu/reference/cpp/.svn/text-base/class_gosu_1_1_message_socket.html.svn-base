<html>
	<head>
		<title>Gosu C++ Reference</title>
		<link rel="stylesheet" href="cpp.css" type="text/css" charset="utf-8">
	</head>
	<body>
	<div class="everything">
<!-- Generated by Doxygen 1.5.9 -->
<script type="text/javascript">
<!--
function changeDisplayState (e){
  var num=this.id.replace(/[^[0-9]/g,'');
  var button=this.firstChild;
  var sectionDiv=document.getElementById('dynsection'+num);
  if (sectionDiv.style.display=='none'||sectionDiv.style.display==''){
    sectionDiv.style.display='block';
    button.src='open.gif';
  }else{
    sectionDiv.style.display='none';
    button.src='closed.gif';
  }
}
function initDynSections(){
  var divs=document.getElementsByTagName('div');
  var sectionCounter=1;
  for(var i=0;i<divs.length-1;i++){
    if(divs[i].className=='dynheader'&&divs[i+1].className=='dynsection'){
      var header=divs[i];
      var section=divs[i+1];
      var button=header.firstChild;
      if (button!='IMG'){
        divs[i].insertBefore(document.createTextNode(' '),divs[i].firstChild);
        button=document.createElement('img');
        divs[i].insertBefore(button,divs[i].firstChild);
      }
      header.style.cursor='pointer';
      header.onclick=changeDisplayState;
      header.id='dynheader'+sectionCounter;
      button.src='closed.gif';
      section.id='dynsection'+sectionCounter;
      section.style.display='none';
      section.style.marginLeft='14px';
      sectionCounter++;
    }
  }
}
window.onload = initDynSections;
-->
</script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.html"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespace_gosu.html">Gosu</a>::<a class="el" href="class_gosu_1_1_message_socket.html">MessageSocket</a>
  </div>
</div>
<div class="contents">
<h1>Gosu::MessageSocket Class Reference</h1><!-- doxytag: class="Gosu::MessageSocket" -->Wraps an UDP socket.  
<a href="#_details">More...</a>
<p>

<p>
<a href="class_gosu_1_1_message_socket-members.html">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_message_socket.html#7894acdea2e7dc85c671ca0f6732ccaf">MessageSocket</a> (<a class="el" href="namespace_gosu.html#ee6ccc5c098c8e63f50d9b4d2cea4e30">SocketPort</a> port)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Opens a message socket for listening at the specified port.  <a href="#7894acdea2e7dc85c671ca0f6732ccaf"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_message_socket.html#19af8fa567af04eb7fe41b704521a595">~MessageSocket</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="namespace_gosu.html#e32efd2c73c3884c91c05d5c136d5485">SocketAddress</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_message_socket.html#eadfbf7bbdcc2544a5aaa0d16efa2851">address</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the local address of the socket.  <a href="#eadfbf7bbdcc2544a5aaa0d16efa2851"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="namespace_gosu.html#ee6ccc5c098c8e63f50d9b4d2cea4e30">SocketPort</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_message_socket.html#38999d7a0fee723adcb21bf3a036be91">port</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the local port of the socket.  <a href="#38999d7a0fee723adcb21bf3a036be91"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">std::size_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_message_socket.html#017cc2347921520ba834ef0ae1c31c11">maxMessageSize</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the maximum size, in bytes, of a packet that can be sent from this socket.  <a href="#017cc2347921520ba834ef0ae1c31c11"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_message_socket.html#3e642630d8b17d9336e3eb7112fa14dd">update</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Collects all the packets that were sent to this socket and calls onReceive for each of them.  <a href="#3e642630d8b17d9336e3eb7112fa14dd"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_message_socket.html#994ac62dc770243d65f88db89c1dc8e6">send</a> (<a class="el" href="namespace_gosu.html#e32efd2c73c3884c91c05d5c136d5485">SocketAddress</a> address, <a class="el" href="namespace_gosu.html#ee6ccc5c098c8e63f50d9b4d2cea4e30">SocketPort</a> port, const void *buffer, std::size_t size)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sends something to the given port of the computer identified by the address.  <a href="#994ac62dc770243d65f88db89c1dc8e6"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Public Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">boost::function&lt; void(<a class="el" href="namespace_gosu.html#e32efd2c73c3884c91c05d5c136d5485">SocketAddress</a>, <br class="typebreak">
<a class="el" href="namespace_gosu.html#ee6ccc5c098c8e63f50d9b4d2cea4e30">SocketPort</a>, const void <br class="typebreak">
*, std::size_t)&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_message_socket.html#946bf3cb838b105842ca86938c3a86ae">onReceive</a> )</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">If assigned, will be called by update for every packet received.  <a href="#946bf3cb838b105842ca86938c3a86ae"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Wraps an UDP socket. 
<p>
Message sockets can send data to and receive data from arbitrary addresses. Also, message sockets send messages (packets) which are limited in size and can arrive in any order, or not at all. 
<p>Definition at line <a class="el" href="_sockets_8hpp_source.html#l00037">37</a> of file <a class="el" href="_sockets_8hpp_source.html">Sockets.hpp</a>.</p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="7894acdea2e7dc85c671ca0f6732ccaf"></a><!-- doxytag: member="Gosu::MessageSocket::MessageSocket" ref="7894acdea2e7dc85c671ca0f6732ccaf" args="(SocketPort port)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Gosu::MessageSocket::MessageSocket           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_gosu.html#ee6ccc5c098c8e63f50d9b4d2cea4e30">SocketPort</a>&nbsp;</td>
          <td class="paramname"> <em>port</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [explicit]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Opens a message socket for listening at the specified port. 
<p>
<a class="el" href="namespace_gosu.html#ef707f47e12343f1cc2fbfe70a1143cf" title="Constant that can be used as a placeholder for an arbitrary port, e.g.">Gosu::anyPort</a> may be passed to have the message socket use a random free port. 
</div>
</div><p>
<a class="anchor" name="19af8fa567af04eb7fe41b704521a595"></a><!-- doxytag: member="Gosu::MessageSocket::~MessageSocket" ref="19af8fa567af04eb7fe41b704521a595" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Gosu::MessageSocket::~MessageSocket           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="eadfbf7bbdcc2544a5aaa0d16efa2851"></a><!-- doxytag: member="Gosu::MessageSocket::address" ref="eadfbf7bbdcc2544a5aaa0d16efa2851" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_gosu.html#e32efd2c73c3884c91c05d5c136d5485">SocketAddress</a> Gosu::MessageSocket::address           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns the local address of the socket. 
<p>

</div>
</div><p>
<a class="anchor" name="017cc2347921520ba834ef0ae1c31c11"></a><!-- doxytag: member="Gosu::MessageSocket::maxMessageSize" ref="017cc2347921520ba834ef0ae1c31c11" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::size_t Gosu::MessageSocket::maxMessageSize           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns the maximum size, in bytes, of a packet that can be sent from this socket. 
<p>

</div>
</div><p>
<a class="anchor" name="38999d7a0fee723adcb21bf3a036be91"></a><!-- doxytag: member="Gosu::MessageSocket::port" ref="38999d7a0fee723adcb21bf3a036be91" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_gosu.html#ee6ccc5c098c8e63f50d9b4d2cea4e30">SocketPort</a> Gosu::MessageSocket::port           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns the local port of the socket. 
<p>

</div>
</div><p>
<a class="anchor" name="994ac62dc770243d65f88db89c1dc8e6"></a><!-- doxytag: member="Gosu::MessageSocket::send" ref="994ac62dc770243d65f88db89c1dc8e6" args="(SocketAddress address, SocketPort port, const void *buffer, std::size_t size)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Gosu::MessageSocket::send           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_gosu.html#e32efd2c73c3884c91c05d5c136d5485">SocketAddress</a>&nbsp;</td>
          <td class="paramname"> <em>address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_gosu.html#ee6ccc5c098c8e63f50d9b4d2cea4e30">SocketPort</a>&nbsp;</td>
          <td class="paramname"> <em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&nbsp;</td>
          <td class="paramname"> <em>buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t&nbsp;</td>
          <td class="paramname"> <em>size</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sends something to the given port of the computer identified by the address. 
<p>

</div>
</div><p>
<a class="anchor" name="3e642630d8b17d9336e3eb7112fa14dd"></a><!-- doxytag: member="Gosu::MessageSocket::update" ref="3e642630d8b17d9336e3eb7112fa14dd" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Gosu::MessageSocket::update           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Collects all the packets that were sent to this socket and calls onReceive for each of them. 
<p>

</div>
</div><p>
<hr><h2>Member Data Documentation</h2>
<a class="anchor" name="946bf3cb838b105842ca86938c3a86ae"></a><!-- doxytag: member="Gosu::MessageSocket::onReceive" ref="946bf3cb838b105842ca86938c3a86ae" args=")" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">boost::function&lt;void (<a class="el" href="namespace_gosu.html#e32efd2c73c3884c91c05d5c136d5485">SocketAddress</a>, <a class="el" href="namespace_gosu.html#ee6ccc5c098c8e63f50d9b4d2cea4e30">SocketPort</a>, const void*, std::size_t) <a class="el" href="class_gosu_1_1_message_socket.html#946bf3cb838b105842ca86938c3a86ae">Gosu::MessageSocket::onReceive</a>)          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
If assigned, will be called by update for every packet received. 
<p>

<p>Definition at line <a class="el" href="_sockets_8hpp_source.html#l00070">70</a> of file <a class="el" href="_sockets_8hpp_source.html">Sockets.hpp</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_sockets_8hpp_source.html">Sockets.hpp</a></ul>
</div>
		<p class="footer">Documentation not clear enough? Please go to one of the places listed on <a href="http://www.libgosu.org/">http://www.libgosu.org/</a> and leave feedback. Thanks!</p>
		</div>
	</body>
</html>
