<html>
	<head>
		<title>Gosu C++ Reference</title>
		<link rel="stylesheet" href="cpp.css" type="text/css" charset="utf-8">
	</head>
	<body>
	<div class="everything">
<!-- Generated by Doxygen 1.5.9 -->
<script type="text/javascript">
<!--
function changeDisplayState (e){
  var num=this.id.replace(/[^[0-9]/g,'');
  var button=this.firstChild;
  var sectionDiv=document.getElementById('dynsection'+num);
  if (sectionDiv.style.display=='none'||sectionDiv.style.display==''){
    sectionDiv.style.display='block';
    button.src='open.gif';
  }else{
    sectionDiv.style.display='none';
    button.src='closed.gif';
  }
}
function initDynSections(){
  var divs=document.getElementsByTagName('div');
  var sectionCounter=1;
  for(var i=0;i<divs.length-1;i++){
    if(divs[i].className=='dynheader'&&divs[i+1].className=='dynsection'){
      var header=divs[i];
      var section=divs[i+1];
      var button=header.firstChild;
      if (button!='IMG'){
        divs[i].insertBefore(document.createTextNode(' '),divs[i].firstChild);
        button=document.createElement('img');
        divs[i].insertBefore(button,divs[i].firstChild);
      }
      header.style.cursor='pointer';
      header.onclick=changeDisplayState;
      header.id='dynheader'+sectionCounter;
      button.src='closed.gif';
      section.id='dynsection'+sectionCounter;
      section.style.display='none';
      section.style.marginLeft='14px';
      sectionCounter++;
    }
  }
}
window.onload = initDynSections;
-->
</script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.html"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.html"><span>File&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>Sockets.hpp File Reference</h1>Interface of the three socket classes, MessageSocket, CommSocket and ListenerSocket.  
<a href="#_details">More...</a>
<p>

<p>
<a href="_sockets_8hpp_source.html">Go to the source code of this file.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Classes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_message_socket.html">Gosu::MessageSocket</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Wraps an UDP socket.  <a href="class_gosu_1_1_message_socket.html#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_comm_socket.html">Gosu::CommSocket</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Wraps a TCP socket that is used for one part of bi-directional communication.  <a href="class_gosu_1_1_comm_socket.html#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_listener_socket.html">Gosu::ListenerSocket</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Wraps a TCP socket that waits on a specific port and can create <a class="el" href="class_gosu_1_1_comm_socket.html" title="Wraps a TCP socket that is used for one part of bi-directional communication.">CommSocket</a> instances via its onConnection event.  <a href="class_gosu_1_1_listener_socket.html#_details">More...</a><br></td></tr>
<tr><td colspan="2"><br><h2>Namespaces</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">namespace &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gosu.html">Gosu</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The library's main namespace. <br></td></tr>

<p>
<tr><td colspan="2"><br><h2>Typedefs</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef boost::uint32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gosu.html#e32efd2c73c3884c91c05d5c136d5485">Gosu::SocketAddress</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Addresses are returned from and given to <a class="el" href="namespace_gosu.html" title="The library&#39;s main namespace.">Gosu</a> functions in host byte order.  <a href="#e32efd2c73c3884c91c05d5c136d5485"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef boost::uint16_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gosu.html#ee6ccc5c098c8e63f50d9b4d2cea4e30">Gosu::SocketPort</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Ports are returned from and given to <a class="el" href="namespace_gosu.html" title="The library&#39;s main namespace.">Gosu</a> functions in host byte order.  <a href="#ee6ccc5c098c8e63f50d9b4d2cea4e30"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Enumerations</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gosu.html#b3663b1e82f7e3aaa65081e06f8f5871">Gosu::CommMode</a> { <a class="el" href="namespace_gosu.html#b3663b1e82f7e3aaa65081e06f8f5871c5eac1ae7fa89b9a53d6c387e5ea74e1">Gosu::cmRaw</a>, 
<a class="el" href="namespace_gosu.html#b3663b1e82f7e3aaa65081e06f8f58718da4ddc0cf3385c1a9c450d3c1ef89d3">Gosu::cmManaged</a>
 }</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Defines the way in which data is collected until the onReceive event is called for CommSockets.  <a href="namespace_gosu.html#b3663b1e82f7e3aaa65081e06f8f5871">More...</a><br></td></tr>
<tr><td colspan="2"><br><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">SocketAddress&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gosu.html#c2c5b3cca9903139efbd2d601a631ee6">Gosu::stringToAddress</a> (const std::string &amp;s)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Tries to convert a dotted IP4 string into an address suitable for socket functions.  <a href="#c2c5b3cca9903139efbd2d601a631ee6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">std::string&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gosu.html#aae23447cebfab874d7657fbe0a8150e">Gosu::addressToString</a> (SocketAddress address)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Converts an address into a dotted IP4 string.  <a href="#aae23447cebfab874d7657fbe0a8150e"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Variables</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const SocketPort&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gosu.html#ef707f47e12343f1cc2fbfe70a1143cf">Gosu::anyPort</a> = 0</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constant that can be used as a placeholder for an arbitrary port, e.g.  <a href="#ef707f47e12343f1cc2fbfe70a1143cf"></a><br></td></tr>
</table>
<hr><h2>Detailed Description</h2>
Interface of the three socket classes, MessageSocket, CommSocket and ListenerSocket. 
<p>

<p>Definition in file <a class="el" href="_sockets_8hpp_source.html">Sockets.hpp</a>.</p>
</div>
		<p class="footer">Documentation not clear enough? Please go to one of the places listed on <a href="http://www.libgosu.org/">http://www.libgosu.org/</a> and leave feedback. Thanks!</p>
		</div>
	</body>
</html>
