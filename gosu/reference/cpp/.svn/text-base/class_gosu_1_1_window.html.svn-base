<html>
	<head>
		<title>Gosu C++ Reference</title>
		<link rel="stylesheet" href="cpp.css" type="text/css" charset="utf-8">
	</head>
	<body>
	<div class="everything">
<!-- Generated by Doxygen 1.5.9 -->
<script type="text/javascript">
<!--
function changeDisplayState (e){
  var num=this.id.replace(/[^[0-9]/g,'');
  var button=this.firstChild;
  var sectionDiv=document.getElementById('dynsection'+num);
  if (sectionDiv.style.display=='none'||sectionDiv.style.display==''){
    sectionDiv.style.display='block';
    button.src='open.gif';
  }else{
    sectionDiv.style.display='none';
    button.src='closed.gif';
  }
}
function initDynSections(){
  var divs=document.getElementsByTagName('div');
  var sectionCounter=1;
  for(var i=0;i<divs.length-1;i++){
    if(divs[i].className=='dynheader'&&divs[i+1].className=='dynsection'){
      var header=divs[i];
      var section=divs[i+1];
      var button=header.firstChild;
      if (button!='IMG'){
        divs[i].insertBefore(document.createTextNode(' '),divs[i].firstChild);
        button=document.createElement('img');
        divs[i].insertBefore(button,divs[i].firstChild);
      }
      header.style.cursor='pointer';
      header.onclick=changeDisplayState;
      header.id='dynheader'+sectionCounter;
      button.src='closed.gif';
      section.id='dynsection'+sectionCounter;
      section.style.display='none';
      section.style.marginLeft='14px';
      sectionCounter++;
    }
  }
}
window.onload = initDynSections;
-->
</script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.html"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespace_gosu.html">Gosu</a>::<a class="el" href="class_gosu_1_1_window.html">Window</a>
  </div>
</div>
<div class="contents">
<h1>Gosu::Window Class Reference</h1><!-- doxytag: class="Gosu::Window" -->Convenient all-in-one class that serves as the foundation of a standard <a class="el" href="namespace_gosu.html" title="The library&#39;s main namespace.">Gosu</a> application.  
<a href="#_details">More...</a>
<p>

<p>
<a href="class_gosu_1_1_window-members.html">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_window.html#369461754934c92b9bd0811dbdad8ffa">Window</a> (unsigned width, unsigned height, bool fullscreen, double updateInterval=16.666666)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructs a <a class="el" href="class_gosu_1_1_window.html" title="Convenient all-in-one class that serves as the foundation of a standard Gosu application...">Window</a>.  <a href="#369461754934c92b9bd0811dbdad8ffa"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_window.html#82e0b1ba37b9a9b5d9f49080ec997dec">~Window</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::wstring&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_window.html#62a0e43f8c0311252e53306699f1d0de">caption</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_window.html#c4af331ee73acf27e75d453309a559d6">setCaption</a> (const std::wstring &amp;caption)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_window.html#cd0648d200a7faab41e31c192d77252b">updateInterval</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_window.html#d4b7c1e5e817d8aaca09f5d19a3a9d93">show</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Enters a modal loop where the <a class="el" href="class_gosu_1_1_window.html" title="Convenient all-in-one class that serves as the foundation of a standard Gosu application...">Window</a> is visible on screen and receives calls to draw, update etc.  <a href="#d4b7c1e5e817d8aaca09f5d19a3a9d93"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_window.html#ccbd57bf5ea05899e4270e2b20b300a6">close</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Closes the window if it is currently shown.  <a href="#ccbd57bf5ea05899e4270e2b20b300a6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_window.html#4c74a15418c916dabec98c2da3ca45ba">update</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Called every updateInterval milliseconds while the window is being shown.  <a href="#4c74a15418c916dabec98c2da3ca45ba"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_window.html#b3c5da8e60f81c0528a5d8d9495daac8">draw</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Called after every update and when the OS wants the window to repaint itself.  <a href="#b3c5da8e60f81c0528a5d8d9495daac8"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_window.html#94fe0b34e44e22a5076edd26f8e76853">needsRedraw</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gives the game a chance to say no to being redrawn.  <a href="#94fe0b34e44e22a5076edd26f8e76853"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_window.html#bcb2bd3e94ece2e22d8d05022e0eb5d6">needsCursor</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">If this function returns true, the system arrow cursor is drawn while over the window.  <a href="#bcb2bd3e94ece2e22d8d05022e0eb5d6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_window.html#00b73422d274420264e479fbaf44b231">loseFocus</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is called when the window loses focus on some platforms.  <a href="#00b73422d274420264e479fbaf44b231"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_window.html#e5dd5f75100fcf8a1d7b38c6f9ec585c">releaseMemory</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is called when the operating system's memory is low.  <a href="#e5dd5f75100fcf8a1d7b38c6f9ec585c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_window.html#d4e680daba62ac7fbc8002b2be50a2c5">buttonDown</a> (<a class="el" href="class_gosu_1_1_button.html">Gosu::Button</a>)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Called before update when the user pressed a button while the window had the focus.  <a href="#d4e680daba62ac7fbc8002b2be50a2c5"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_window.html#41ab0a9bfee1c88d96618308bde584fc">buttonUp</a> (<a class="el" href="class_gosu_1_1_button.html">Gosu::Button</a>)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Same as buttonDown. Called then the user released a button.  <a href="#41ab0a9bfee1c88d96618308bde584fc"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const <a class="el" href="class_gosu_1_1_graphics.html">Graphics</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_window.html#92beaec534fff9513788b37236417991">graphics</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="class_gosu_1_1_graphics.html">Graphics</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_window.html#6dea7f1d1f9f44664b000c6a2150650e">graphics</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">const <a class="el" href="class_gosu_1_1_input.html">Input</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_window.html#88078642d31df76f4fdff18fbce78f41">input</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="class_gosu_1_1_input.html">Input</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_window.html#8ea4ba2ff316a565b8701c46aa1972ad">input</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">const Audio &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_window.html#50e644e03e69dba6f0914bd6a10daef2">audio</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">Audio &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_window.html#ba6ad526d3718ab2f53b62067aac74de">audio</a> ()</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Convenient all-in-one class that serves as the foundation of a standard <a class="el" href="namespace_gosu.html" title="The library&#39;s main namespace.">Gosu</a> application. 
<p>
Manages initialization of all of Gosu's core components and provides timing functionality. Note that you should really only use on instance of this class at the same time. This may or may not change later. 
<p>Definition at line <a class="el" href="_window_8hpp_source.html#l00029">29</a> of file <a class="el" href="_window_8hpp_source.html">Window.hpp</a>.</p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="369461754934c92b9bd0811dbdad8ffa"></a><!-- doxytag: member="Gosu::Window::Window" ref="369461754934c92b9bd0811dbdad8ffa" args="(unsigned width, unsigned height, bool fullscreen, double updateInterval=16.666666)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Gosu::Window::Window           </td>
          <td>(</td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>fullscreen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>updateInterval</em> = <code>16.666666</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructs a <a class="el" href="class_gosu_1_1_window.html" title="Convenient all-in-one class that serves as the foundation of a standard Gosu application...">Window</a>. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>updateInterval</em>&nbsp;</td><td>Interval in milliseconds between two calls to the update member function. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="82e0b1ba37b9a9b5d9f49080ec997dec"></a><!-- doxytag: member="Gosu::Window::~Window" ref="82e0b1ba37b9a9b5d9f49080ec997dec" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual Gosu::Window::~Window           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="ba6ad526d3718ab2f53b62067aac74de"></a><!-- doxytag: member="Gosu::Window::audio" ref="ba6ad526d3718ab2f53b62067aac74de" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Audio&amp; Gosu::Window::audio           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="50e644e03e69dba6f0914bd6a10daef2"></a><!-- doxytag: member="Gosu::Window::audio" ref="50e644e03e69dba6f0914bd6a10daef2" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const Audio&amp; Gosu::Window::audio           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="d4e680daba62ac7fbc8002b2be50a2c5"></a><!-- doxytag: member="Gosu::Window::buttonDown" ref="d4e680daba62ac7fbc8002b2be50a2c5" args="(Gosu::Button)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Gosu::Window::buttonDown           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_gosu_1_1_button.html">Gosu::Button</a>&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Called before update when the user pressed a button while the window had the focus. 
<p>

<p>Definition at line <a class="el" href="_window_8hpp_source.html#l00080">80</a> of file <a class="el" href="_window_8hpp_source.html">Window.hpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="41ab0a9bfee1c88d96618308bde584fc"></a><!-- doxytag: member="Gosu::Window::buttonUp" ref="41ab0a9bfee1c88d96618308bde584fc" args="(Gosu::Button)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Gosu::Window::buttonUp           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_gosu_1_1_button.html">Gosu::Button</a>&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Same as buttonDown. Called then the user released a button. 
<p>

<p>Definition at line <a class="el" href="_window_8hpp_source.html#l00082">82</a> of file <a class="el" href="_window_8hpp_source.html">Window.hpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="62a0e43f8c0311252e53306699f1d0de"></a><!-- doxytag: member="Gosu::Window::caption" ref="62a0e43f8c0311252e53306699f1d0de" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::wstring Gosu::Window::caption           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="ccbd57bf5ea05899e4270e2b20b300a6"></a><!-- doxytag: member="Gosu::Window::close" ref="ccbd57bf5ea05899e4270e2b20b300a6" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Gosu::Window::close           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Closes the window if it is currently shown. 
<p>

</div>
</div><p>
<a class="anchor" name="b3c5da8e60f81c0528a5d8d9495daac8"></a><!-- doxytag: member="Gosu::Window::draw" ref="b3c5da8e60f81c0528a5d8d9495daac8" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Gosu::Window::draw           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Called after every update and when the OS wants the window to repaint itself. 
<p>
Your application's rendering code goes here. 
<p>Definition at line <a class="el" href="_window_8hpp_source.html#l00057">57</a> of file <a class="el" href="_window_8hpp_source.html">Window.hpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="6dea7f1d1f9f44664b000c6a2150650e"></a><!-- doxytag: member="Gosu::Window::graphics" ref="6dea7f1d1f9f44664b000c6a2150650e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_gosu_1_1_graphics.html">Graphics</a>&amp; Gosu::Window::graphics           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="92beaec534fff9513788b37236417991"></a><!-- doxytag: member="Gosu::Window::graphics" ref="92beaec534fff9513788b37236417991" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="class_gosu_1_1_graphics.html">Graphics</a>&amp; Gosu::Window::graphics           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="8ea4ba2ff316a565b8701c46aa1972ad"></a><!-- doxytag: member="Gosu::Window::input" ref="8ea4ba2ff316a565b8701c46aa1972ad" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_gosu_1_1_input.html">Input</a>&amp; Gosu::Window::input           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="88078642d31df76f4fdff18fbce78f41"></a><!-- doxytag: member="Gosu::Window::input" ref="88078642d31df76f4fdff18fbce78f41" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="class_gosu_1_1_input.html">Input</a>&amp; Gosu::Window::input           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="00b73422d274420264e479fbaf44b231"></a><!-- doxytag: member="Gosu::Window::loseFocus" ref="00b73422d274420264e479fbaf44b231" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Gosu::Window::loseFocus           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function is called when the window loses focus on some platforms. 
<p>
Most importantly, it is called on the iPhone or iPad when the user locks the screen. 
<p>Definition at line <a class="el" href="_window_8hpp_source.html#l00072">72</a> of file <a class="el" href="_window_8hpp_source.html">Window.hpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="bcb2bd3e94ece2e22d8d05022e0eb5d6"></a><!-- doxytag: member="Gosu::Window::needsCursor" ref="bcb2bd3e94ece2e22d8d05022e0eb5d6" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Gosu::Window::needsCursor           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
If this function returns true, the system arrow cursor is drawn while over the window. 
<p>

<p>Definition at line <a class="el" href="_window_8hpp_source.html#l00067">67</a> of file <a class="el" href="_window_8hpp_source.html">Window.hpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="94fe0b34e44e22a5076edd26f8e76853"></a><!-- doxytag: member="Gosu::Window::needsRedraw" ref="94fe0b34e44e22a5076edd26f8e76853" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Gosu::Window::needsRedraw           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Gives the game a chance to say no to being redrawn. 
<p>
This is not a definitive answer. The operating system can still cause redraws for one reason or another. By default, the window is redrawn all the time. 
<p>Definition at line <a class="el" href="_window_8hpp_source.html#l00063">63</a> of file <a class="el" href="_window_8hpp_source.html">Window.hpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="e5dd5f75100fcf8a1d7b38c6f9ec585c"></a><!-- doxytag: member="Gosu::Window::releaseMemory" ref="e5dd5f75100fcf8a1d7b38c6f9ec585c" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Gosu::Window::releaseMemory           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function is called when the operating system's memory is low. 
<p>
So far, it is only called in iOS applications. 
<p>Definition at line <a class="el" href="_window_8hpp_source.html#l00076">76</a> of file <a class="el" href="_window_8hpp_source.html">Window.hpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="c4af331ee73acf27e75d453309a559d6"></a><!-- doxytag: member="Gosu::Window::setCaption" ref="c4af331ee73acf27e75d453309a559d6" args="(const std::wstring &amp;caption)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Gosu::Window::setCaption           </td>
          <td>(</td>
          <td class="paramtype">const std::wstring &amp;&nbsp;</td>
          <td class="paramname"> <em>caption</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="d4b7c1e5e817d8aaca09f5d19a3a9d93"></a><!-- doxytag: member="Gosu::Window::show" ref="d4b7c1e5e817d8aaca09f5d19a3a9d93" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Gosu::Window::show           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Enters a modal loop where the <a class="el" href="class_gosu_1_1_window.html" title="Convenient all-in-one class that serves as the foundation of a standard Gosu application...">Window</a> is visible on screen and receives calls to draw, update etc. 
<p>

</div>
</div><p>
<a class="anchor" name="4c74a15418c916dabec98c2da3ca45ba"></a><!-- doxytag: member="Gosu::Window::update" ref="4c74a15418c916dabec98c2da3ca45ba" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Gosu::Window::update           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Called every updateInterval milliseconds while the window is being shown. 
<p>
Your application's main game logic goes here. 
<p>Definition at line <a class="el" href="_window_8hpp_source.html#l00054">54</a> of file <a class="el" href="_window_8hpp_source.html">Window.hpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="cd0648d200a7faab41e31c192d77252b"></a><!-- doxytag: member="Gosu::Window::updateInterval" ref="cd0648d200a7faab41e31c192d77252b" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double Gosu::Window::updateInterval           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_window_8hpp_source.html">Window.hpp</a></ul>
</div>
		<p class="footer">Documentation not clear enough? Please go to one of the places listed on <a href="http://www.libgosu.org/">http://www.libgosu.org/</a> and leave feedback. Thanks!</p>
		</div>
	</body>
</html>
