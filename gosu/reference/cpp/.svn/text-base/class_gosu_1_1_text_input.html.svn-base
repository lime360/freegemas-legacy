<html>
	<head>
		<title>Gosu C++ Reference</title>
		<link rel="stylesheet" href="cpp.css" type="text/css" charset="utf-8">
	</head>
	<body>
	<div class="everything">
<!-- Generated by Doxygen 1.5.9 -->
<script type="text/javascript">
<!--
function changeDisplayState (e){
  var num=this.id.replace(/[^[0-9]/g,'');
  var button=this.firstChild;
  var sectionDiv=document.getElementById('dynsection'+num);
  if (sectionDiv.style.display=='none'||sectionDiv.style.display==''){
    sectionDiv.style.display='block';
    button.src='open.gif';
  }else{
    sectionDiv.style.display='none';
    button.src='closed.gif';
  }
}
function initDynSections(){
  var divs=document.getElementsByTagName('div');
  var sectionCounter=1;
  for(var i=0;i<divs.length-1;i++){
    if(divs[i].className=='dynheader'&&divs[i+1].className=='dynsection'){
      var header=divs[i];
      var section=divs[i+1];
      var button=header.firstChild;
      if (button!='IMG'){
        divs[i].insertBefore(document.createTextNode(' '),divs[i].firstChild);
        button=document.createElement('img');
        divs[i].insertBefore(button,divs[i].firstChild);
      }
      header.style.cursor='pointer';
      header.onclick=changeDisplayState;
      header.id='dynheader'+sectionCounter;
      button.src='closed.gif';
      section.id='dynsection'+sectionCounter;
      section.style.display='none';
      section.style.marginLeft='14px';
      sectionCounter++;
    }
  }
}
window.onload = initDynSections;
-->
</script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.html"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespace_gosu.html">Gosu</a>::<a class="el" href="class_gosu_1_1_text_input.html">TextInput</a>
  </div>
</div>
<div class="contents">
<h1>Gosu::TextInput Class Reference</h1><!-- doxytag: class="Gosu::TextInput" --><a class="el" href="class_gosu_1_1_text_input.html" title="TextInput instances are invisible objects that build a text string from input, using...">TextInput</a> instances are invisible objects that build a text string from input, using the current operating system's keyboard layout.  
<a href="#_details">More...</a>
<p>

<p>
<a href="class_gosu_1_1_text_input-members.html">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_text_input.html#b05962a92c85b8d9535d60a1fd5e0b00">TextInput</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_text_input.html#f5ae3109152128bec16e2787e45d7af3">~TextInput</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::wstring&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_text_input.html#1856bf4e58a2c41ca70dcfe562e8022d">text</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_text_input.html#442bfe73c574c19fe7432fde7b937f5d">setText</a> (const std::wstring &amp;text)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Replaces the current text by the given string and positions the cursor at the end of the text, with an empty selection.  <a href="#442bfe73c574c19fe7432fde7b937f5d"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_text_input.html#8ad34a47b306222df9a28a57c1fa8622">caretPos</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Position of the caret as the index of the character that it's left to.  <a href="#8ad34a47b306222df9a28a57c1fa8622"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_text_input.html#4a2029bd28582df7f97d072bf77dc90c">setCaretPos</a> (unsigned pos)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets the caret position as returned by caretPos.  <a href="#4a2029bd28582df7f97d072bf77dc90c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_text_input.html#6ddbf85f2115575e2d05e144923630de">selectionStart</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">If there is a selection, the <a class="el" href="class_gosu_1_1_text_input.html#6ddbf85f2115575e2d05e144923630de" title="If there is a selection, the selectionStart() member yields its beginning, using...">selectionStart()</a> member yields its beginning, using the same indexing scheme as caretPos.  <a href="#6ddbf85f2115575e2d05e144923630de"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_text_input.html#8cceca8a7f843e00c1f5b795f9adeb8c">setSelectionStart</a> (unsigned pos)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets the start of the selection as returned by selectionStart.  <a href="#8cceca8a7f843e00c1f5b795f9adeb8c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual std::wstring&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_text_input.html#154b84dccb41f48884de97d8208efb72">filter</a> (const std::wstring &amp;textIn) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Overridable filter that is applied to all new text that is entered.  <a href="#154b84dccb41f48884de97d8208efb72"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
<a class="el" href="class_gosu_1_1_text_input.html" title="TextInput instances are invisible objects that build a text string from input, using...">TextInput</a> instances are invisible objects that build a text string from input, using the current operating system's keyboard layout. 
<p>
At its most basic form, you only need to create a new <a class="el" href="class_gosu_1_1_text_input.html" title="TextInput instances are invisible objects that build a text string from input, using...">TextInput</a> instance and pass it to your window via setTextInput. Until you call this function again, passing 0, the <a class="el" href="class_gosu_1_1_text_input.html" title="TextInput instances are invisible objects that build a text string from input, using...">TextInput</a> object will build a text that can be accessed via <a class="el" href="class_gosu_1_1_text_input.html#1856bf4e58a2c41ca70dcfe562e8022d">TextInput::text()</a>. A <a class="el" href="class_gosu_1_1_text_input.html" title="TextInput instances are invisible objects that build a text string from input, using...">TextInput</a> object is purely abstract, though; drawing the input field is left to the user. As with most of <a class="el" href="namespace_gosu.html" title="The library&#39;s main namespace.">Gosu</a>, how this is handled is completely left open. <a class="el" href="class_gosu_1_1_text_input.html" title="TextInput instances are invisible objects that build a text string from input, using...">TextInput</a> only aims to provide enough code for your own GUIs to build upon. 
<p>Definition at line <a class="el" href="_text_input_8hpp_source.html#l00023">23</a> of file <a class="el" href="_text_input_8hpp_source.html">TextInput.hpp</a>.</p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="b05962a92c85b8d9535d60a1fd5e0b00"></a><!-- doxytag: member="Gosu::TextInput::TextInput" ref="b05962a92c85b8d9535d60a1fd5e0b00" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Gosu::TextInput::TextInput           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="f5ae3109152128bec16e2787e45d7af3"></a><!-- doxytag: member="Gosu::TextInput::~TextInput" ref="f5ae3109152128bec16e2787e45d7af3" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual Gosu::TextInput::~TextInput           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="8ad34a47b306222df9a28a57c1fa8622"></a><!-- doxytag: member="Gosu::TextInput::caretPos" ref="8ad34a47b306222df9a28a57c1fa8622" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned Gosu::TextInput::caretPos           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Position of the caret as the index of the character that it's left to. 
<p>

</div>
</div><p>
<a class="anchor" name="154b84dccb41f48884de97d8208efb72"></a><!-- doxytag: member="Gosu::TextInput::filter" ref="154b84dccb41f48884de97d8208efb72" args="(const std::wstring &amp;textIn) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::wstring Gosu::TextInput::filter           </td>
          <td>(</td>
          <td class="paramtype">const std::wstring &amp;&nbsp;</td>
          <td class="paramname"> <em>textIn</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Overridable filter that is applied to all new text that is entered. 
<p>
Allows for context-sensitive filtering/extending/... of the text. The text will be inserted at caretPos afterwards. 
<p>Definition at line <a class="el" href="_text_input_8hpp_source.html#l00063">63</a> of file <a class="el" href="_text_input_8hpp_source.html">TextInput.hpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="6ddbf85f2115575e2d05e144923630de"></a><!-- doxytag: member="Gosu::TextInput::selectionStart" ref="6ddbf85f2115575e2d05e144923630de" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned Gosu::TextInput::selectionStart           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
If there is a selection, the <a class="el" href="class_gosu_1_1_text_input.html#6ddbf85f2115575e2d05e144923630de" title="If there is a selection, the selectionStart() member yields its beginning, using...">selectionStart()</a> member yields its beginning, using the same indexing scheme as caretPos. 
<p>
If there is no selection, <a class="el" href="class_gosu_1_1_text_input.html#6ddbf85f2115575e2d05e144923630de" title="If there is a selection, the selectionStart() member yields its beginning, using...">selectionStart()</a> is equal to <a class="el" href="class_gosu_1_1_text_input.html#8ad34a47b306222df9a28a57c1fa8622" title="Position of the caret as the index of the character that it&#39;s left to.">caretPos()</a>. 
</div>
</div><p>
<a class="anchor" name="4a2029bd28582df7f97d072bf77dc90c"></a><!-- doxytag: member="Gosu::TextInput::setCaretPos" ref="4a2029bd28582df7f97d072bf77dc90c" args="(unsigned pos)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Gosu::TextInput::setCaretPos           </td>
          <td>(</td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>pos</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets the caret position as returned by caretPos. 
<p>
You usually also want to use setSelectionStart. 
</div>
</div><p>
<a class="anchor" name="8cceca8a7f843e00c1f5b795f9adeb8c"></a><!-- doxytag: member="Gosu::TextInput::setSelectionStart" ref="8cceca8a7f843e00c1f5b795f9adeb8c" args="(unsigned pos)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Gosu::TextInput::setSelectionStart           </td>
          <td>(</td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>pos</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets the start of the selection as returned by selectionStart. 
<p>

</div>
</div><p>
<a class="anchor" name="442bfe73c574c19fe7432fde7b937f5d"></a><!-- doxytag: member="Gosu::TextInput::setText" ref="442bfe73c574c19fe7432fde7b937f5d" args="(const std::wstring &amp;text)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Gosu::TextInput::setText           </td>
          <td>(</td>
          <td class="paramtype">const std::wstring &amp;&nbsp;</td>
          <td class="paramname"> <em>text</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Replaces the current text by the given string and positions the cursor at the end of the text, with an empty selection. 
<p>

</div>
</div><p>
<a class="anchor" name="1856bf4e58a2c41ca70dcfe562e8022d"></a><!-- doxytag: member="Gosu::TextInput::text" ref="1856bf4e58a2c41ca70dcfe562e8022d" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::wstring Gosu::TextInput::text           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_text_input_8hpp_source.html">TextInput.hpp</a></ul>
</div>
		<p class="footer">Documentation not clear enough? Please go to one of the places listed on <a href="http://www.libgosu.org/">http://www.libgosu.org/</a> and leave feedback. Thanks!</p>
		</div>
	</body>
</html>
