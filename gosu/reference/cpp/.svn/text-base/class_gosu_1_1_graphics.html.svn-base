<html>
	<head>
		<title>Gosu C++ Reference</title>
		<link rel="stylesheet" href="cpp.css" type="text/css" charset="utf-8">
	</head>
	<body>
	<div class="everything">
<!-- Generated by Doxygen 1.5.9 -->
<script type="text/javascript">
<!--
function changeDisplayState (e){
  var num=this.id.replace(/[^[0-9]/g,'');
  var button=this.firstChild;
  var sectionDiv=document.getElementById('dynsection'+num);
  if (sectionDiv.style.display=='none'||sectionDiv.style.display==''){
    sectionDiv.style.display='block';
    button.src='open.gif';
  }else{
    sectionDiv.style.display='none';
    button.src='closed.gif';
  }
}
function initDynSections(){
  var divs=document.getElementsByTagName('div');
  var sectionCounter=1;
  for(var i=0;i<divs.length-1;i++){
    if(divs[i].className=='dynheader'&&divs[i+1].className=='dynsection'){
      var header=divs[i];
      var section=divs[i+1];
      var button=header.firstChild;
      if (button!='IMG'){
        divs[i].insertBefore(document.createTextNode(' '),divs[i].firstChild);
        button=document.createElement('img');
        divs[i].insertBefore(button,divs[i].firstChild);
      }
      header.style.cursor='pointer';
      header.onclick=changeDisplayState;
      header.id='dynheader'+sectionCounter;
      button.src='closed.gif';
      section.id='dynsection'+sectionCounter;
      section.style.display='none';
      section.style.marginLeft='14px';
      sectionCounter++;
    }
  }
}
window.onload = initDynSections;
-->
</script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.html"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespace_gosu.html">Gosu</a>::<a class="el" href="class_gosu_1_1_graphics.html">Graphics</a>
  </div>
</div>
<div class="contents">
<h1>Gosu::Graphics Class Reference</h1><!-- doxytag: class="Gosu::Graphics" -->Serves as the target of all drawing and provides primitive drawing functionality.  
<a href="#_details">More...</a>
<p>

<p>
<a href="class_gosu_1_1_graphics-members.html">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_graphics.html#2c81cc2bde977fdce58fd353b3d4a6c0">Graphics</a> (unsigned physicalWidth, unsigned physicalHeight, bool fullscreen)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_graphics.html#6010e7c7473d73bffe1e3239f07e6395">~Graphics</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_graphics.html#325c631eb7e8ec63171c803d2cd59f26">setResolution</a> (unsigned virtualWidth, unsigned virtualHeight)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_graphics.html#1e06d6eea03677546dd637e9b5b0b6bf">width</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_graphics.html#f1db946f6dba8e88d7239e523382c98a">height</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_graphics.html#730cc192034ee1070b2017d41fe7e89e">fullscreen</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_graphics.html#2323d25a8ca7909b67e5e01f838bd8bc">begin</a> (<a class="el" href="class_gosu_1_1_color.html">Color</a> clearWithColor=<a class="el" href="class_gosu_1_1_color.html#4d4050258bcab2ab1f7a5ca9b411b611">Color::BLACK</a>)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Prepares the graphics object for drawing.  <a href="#2323d25a8ca7909b67e5e01f838bd8bc"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_graphics.html#ddeab66c3a18c0a12df43067de841b71">end</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Every call to begin must have a matching call to end.  <a href="#ddeab66c3a18c0a12df43067de841b71"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_graphics.html#f6cdee3425e60ec8ffbc4f9ecb1b54ac">flush</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Flushes the Z queue to the screen and starts a new one.  <a href="#f6cdee3425e60ec8ffbc4f9ecb1b54ac"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_graphics.html#207f436a09bd02e11ddc474565912135">beginGL</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Finishes all pending <a class="el" href="namespace_gosu.html" title="The library&#39;s main namespace.">Gosu</a> drawing operations and executes the following OpenGL code in a clean environment.  <a href="#207f436a09bd02e11ddc474565912135"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_graphics.html#3e37d9b17e55fa5f6d3ad6116759364f">endGL</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Resets <a class="el" href="namespace_gosu.html" title="The library&#39;s main namespace.">Gosu</a> into its default rendering state.  <a href="#3e37d9b17e55fa5f6d3ad6116759364f"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_graphics.html#dbfed3b65f3999f84f95128af572dc0b">scheduleGL</a> (const boost::function&lt; void()&gt; &amp;functor, <a class="el" href="namespace_gosu.html#a2fd8fe9574c0ad3fd52557cb160be49">ZPos</a> z)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">(Experimental) Schedules a custom GL functor to be executed at a certain Z level.  <a href="#dbfed3b65f3999f84f95128af572dc0b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_graphics.html#41f72426e110063503faf7ef31b65290">beginClipping</a> (double x, double y, double width, double height)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Enables clipping to a specified rectangle.  <a href="#41f72426e110063503faf7ef31b65290"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_graphics.html#b71d990078f8fb93ef5d93f625fec172">endClipping</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Disables clipping.  <a href="#b71d990078f8fb93ef5d93f625fec172"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_graphics.html#3cee913dc7dbc39972a522d9e1a28d6b">beginRecording</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Starts recording a macro. Cannot be nested.  <a href="#3cee913dc7dbc39972a522d9e1a28d6b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">std::auto_ptr&lt; <a class="el" href="class_gosu_1_1_image_data.html">Gosu::ImageData</a> &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_graphics.html#c45e29952d26d8f69e04660d17e906ee">endRecording</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Finishes building the macro and returns it as a drawable object.  <a href="#c45e29952d26d8f69e04660d17e906ee"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_graphics.html#8fa36535a9c66917af002547d7f39b10">pushTransform</a> (const <a class="el" href="namespace_gosu.html#fc543993017eada52ee25cbfaea7f53a">Transform</a> &amp;transform)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Pushes one transformation onto the transformation stack.  <a href="#8fa36535a9c66917af002547d7f39b10"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_graphics.html#e04842a3903999cf75b5789e4232dffd">popTransform</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Pops one transformation from the transformation stack.  <a href="#e04842a3903999cf75b5789e4232dffd"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_graphics.html#cccecf39a52c5a4307f76db0e5128494">drawLine</a> (double x1, double y1, <a class="el" href="class_gosu_1_1_color.html">Color</a> c1, double x2, double y2, <a class="el" href="class_gosu_1_1_color.html">Color</a> c2, <a class="el" href="namespace_gosu.html#a2fd8fe9574c0ad3fd52557cb160be49">ZPos</a> z, <a class="el" href="namespace_gosu.html#769656b1f560bc3d1bbdb47f8ca4eda9">AlphaMode</a> mode=amDefault)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Draws a line from one point to another (last pixel exclusive).  <a href="#cccecf39a52c5a4307f76db0e5128494"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_graphics.html#019db9071f130d4a7c1a269065f54df7">drawTriangle</a> (double x1, double y1, <a class="el" href="class_gosu_1_1_color.html">Color</a> c1, double x2, double y2, <a class="el" href="class_gosu_1_1_color.html">Color</a> c2, double x3, double y3, <a class="el" href="class_gosu_1_1_color.html">Color</a> c3, <a class="el" href="namespace_gosu.html#a2fd8fe9574c0ad3fd52557cb160be49">ZPos</a> z, <a class="el" href="namespace_gosu.html#769656b1f560bc3d1bbdb47f8ca4eda9">AlphaMode</a> mode=amDefault)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_graphics.html#21214cced892d42e1c482d86bec76ca9">drawQuad</a> (double x1, double y1, <a class="el" href="class_gosu_1_1_color.html">Color</a> c1, double x2, double y2, <a class="el" href="class_gosu_1_1_color.html">Color</a> c2, double x3, double y3, <a class="el" href="class_gosu_1_1_color.html">Color</a> c3, double x4, double y4, <a class="el" href="class_gosu_1_1_color.html">Color</a> c4, <a class="el" href="namespace_gosu.html#a2fd8fe9574c0ad3fd52557cb160be49">ZPos</a> z, <a class="el" href="namespace_gosu.html#769656b1f560bc3d1bbdb47f8ca4eda9">AlphaMode</a> mode=amDefault)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::auto_ptr&lt; <a class="el" href="class_gosu_1_1_image_data.html">ImageData</a> &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gosu_1_1_graphics.html#6b10629453eec979500179e4ceb11434">createImage</a> (const <a class="el" href="class_gosu_1_1_bitmap.html">Bitmap</a> &amp;src, unsigned srcX, unsigned srcY, unsigned srcWidth, unsigned srcHeight, unsigned borderFlags)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Turns a portion of a bitmap into something that can be drawn on this graphics object.  <a href="#6b10629453eec979500179e4ceb11434"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Serves as the target of all drawing and provides primitive drawing functionality. 
<p>
Usually created internally by <a class="el" href="class_gosu_1_1_window.html" title="Convenient all-in-one class that serves as the foundation of a standard Gosu application...">Gosu::Window</a>. 
<p>Definition at line <a class="el" href="_graphics_8hpp_source.html#l00037">37</a> of file <a class="el" href="_graphics_8hpp_source.html">Graphics.hpp</a>.</p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="2c81cc2bde977fdce58fd353b3d4a6c0"></a><!-- doxytag: member="Gosu::Graphics::Graphics" ref="2c81cc2bde977fdce58fd353b3d4a6c0" args="(unsigned physicalWidth, unsigned physicalHeight, bool fullscreen)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Gosu::Graphics::Graphics           </td>
          <td>(</td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>physicalWidth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>physicalHeight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>fullscreen</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="6010e7c7473d73bffe1e3239f07e6395"></a><!-- doxytag: member="Gosu::Graphics::~Graphics" ref="6010e7c7473d73bffe1e3239f07e6395" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Gosu::Graphics::~Graphics           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="2323d25a8ca7909b67e5e01f838bd8bc"></a><!-- doxytag: member="Gosu::Graphics::begin" ref="2323d25a8ca7909b67e5e01f838bd8bc" args="(Color clearWithColor=Color::BLACK)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Gosu::Graphics::begin           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_gosu_1_1_color.html">Color</a>&nbsp;</td>
          <td class="paramname"> <em>clearWithColor</em> = <code><a class="el" href="class_gosu_1_1_color.html#4d4050258bcab2ab1f7a5ca9b411b611">Color::BLACK</a></code>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Prepares the graphics object for drawing. 
<p>
Nothing must be drawn without calling begin. 
</div>
</div><p>
<a class="anchor" name="41f72426e110063503faf7ef31b65290"></a><!-- doxytag: member="Gosu::Graphics::beginClipping" ref="41f72426e110063503faf7ef31b65290" args="(double x, double y, double width, double height)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Gosu::Graphics::beginClipping           </td>
          <td>(</td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>height</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Enables clipping to a specified rectangle. 
<p>

</div>
</div><p>
<a class="anchor" name="207f436a09bd02e11ddc474565912135"></a><!-- doxytag: member="Gosu::Graphics::beginGL" ref="207f436a09bd02e11ddc474565912135" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Gosu::Graphics::beginGL           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Finishes all pending <a class="el" href="namespace_gosu.html" title="The library&#39;s main namespace.">Gosu</a> drawing operations and executes the following OpenGL code in a clean environment. 
<p>

</div>
</div><p>
<a class="anchor" name="3cee913dc7dbc39972a522d9e1a28d6b"></a><!-- doxytag: member="Gosu::Graphics::beginRecording" ref="3cee913dc7dbc39972a522d9e1a28d6b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Gosu::Graphics::beginRecording           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Starts recording a macro. Cannot be nested. 
<p>

</div>
</div><p>
<a class="anchor" name="6b10629453eec979500179e4ceb11434"></a><!-- doxytag: member="Gosu::Graphics::createImage" ref="6b10629453eec979500179e4ceb11434" args="(const Bitmap &amp;src, unsigned srcX, unsigned srcY, unsigned srcWidth, unsigned srcHeight, unsigned borderFlags)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::auto_ptr&lt;<a class="el" href="class_gosu_1_1_image_data.html">ImageData</a>&gt; Gosu::Graphics::createImage           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_gosu_1_1_bitmap.html">Bitmap</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>srcX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>srcY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>srcWidth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>srcHeight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>borderFlags</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Turns a portion of a bitmap into something that can be drawn on this graphics object. 
<p>

</div>
</div><p>
<a class="anchor" name="cccecf39a52c5a4307f76db0e5128494"></a><!-- doxytag: member="Gosu::Graphics::drawLine" ref="cccecf39a52c5a4307f76db0e5128494" args="(double x1, double y1, Color c1, double x2, double y2, Color c2, ZPos z, AlphaMode mode=amDefault)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Gosu::Graphics::drawLine           </td>
          <td>(</td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_gosu_1_1_color.html">Color</a>&nbsp;</td>
          <td class="paramname"> <em>c1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>x2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>y2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_gosu_1_1_color.html">Color</a>&nbsp;</td>
          <td class="paramname"> <em>c2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_gosu.html#a2fd8fe9574c0ad3fd52557cb160be49">ZPos</a>&nbsp;</td>
          <td class="paramname"> <em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_gosu.html#769656b1f560bc3d1bbdb47f8ca4eda9">AlphaMode</a>&nbsp;</td>
          <td class="paramname"> <em>mode</em> = <code>amDefault</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Draws a line from one point to another (last pixel exclusive). 
<p>

</div>
</div><p>
<a class="anchor" name="21214cced892d42e1c482d86bec76ca9"></a><!-- doxytag: member="Gosu::Graphics::drawQuad" ref="21214cced892d42e1c482d86bec76ca9" args="(double x1, double y1, Color c1, double x2, double y2, Color c2, double x3, double y3, Color c3, double x4, double y4, Color c4, ZPos z, AlphaMode mode=amDefault)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Gosu::Graphics::drawQuad           </td>
          <td>(</td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_gosu_1_1_color.html">Color</a>&nbsp;</td>
          <td class="paramname"> <em>c1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>x2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>y2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_gosu_1_1_color.html">Color</a>&nbsp;</td>
          <td class="paramname"> <em>c2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>x3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>y3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_gosu_1_1_color.html">Color</a>&nbsp;</td>
          <td class="paramname"> <em>c3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>x4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>y4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_gosu_1_1_color.html">Color</a>&nbsp;</td>
          <td class="paramname"> <em>c4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_gosu.html#a2fd8fe9574c0ad3fd52557cb160be49">ZPos</a>&nbsp;</td>
          <td class="paramname"> <em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_gosu.html#769656b1f560bc3d1bbdb47f8ca4eda9">AlphaMode</a>&nbsp;</td>
          <td class="paramname"> <em>mode</em> = <code>amDefault</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="019db9071f130d4a7c1a269065f54df7"></a><!-- doxytag: member="Gosu::Graphics::drawTriangle" ref="019db9071f130d4a7c1a269065f54df7" args="(double x1, double y1, Color c1, double x2, double y2, Color c2, double x3, double y3, Color c3, ZPos z, AlphaMode mode=amDefault)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Gosu::Graphics::drawTriangle           </td>
          <td>(</td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_gosu_1_1_color.html">Color</a>&nbsp;</td>
          <td class="paramname"> <em>c1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>x2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>y2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_gosu_1_1_color.html">Color</a>&nbsp;</td>
          <td class="paramname"> <em>c2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>x3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>y3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_gosu_1_1_color.html">Color</a>&nbsp;</td>
          <td class="paramname"> <em>c3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_gosu.html#a2fd8fe9574c0ad3fd52557cb160be49">ZPos</a>&nbsp;</td>
          <td class="paramname"> <em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_gosu.html#769656b1f560bc3d1bbdb47f8ca4eda9">AlphaMode</a>&nbsp;</td>
          <td class="paramname"> <em>mode</em> = <code>amDefault</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="ddeab66c3a18c0a12df43067de841b71"></a><!-- doxytag: member="Gosu::Graphics::end" ref="ddeab66c3a18c0a12df43067de841b71" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Gosu::Graphics::end           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Every call to begin must have a matching call to end. 
<p>

</div>
</div><p>
<a class="anchor" name="b71d990078f8fb93ef5d93f625fec172"></a><!-- doxytag: member="Gosu::Graphics::endClipping" ref="b71d990078f8fb93ef5d93f625fec172" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Gosu::Graphics::endClipping           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Disables clipping. 
<p>

</div>
</div><p>
<a class="anchor" name="3e37d9b17e55fa5f6d3ad6116759364f"></a><!-- doxytag: member="Gosu::Graphics::endGL" ref="3e37d9b17e55fa5f6d3ad6116759364f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Gosu::Graphics::endGL           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Resets <a class="el" href="namespace_gosu.html" title="The library&#39;s main namespace.">Gosu</a> into its default rendering state. 
<p>

</div>
</div><p>
<a class="anchor" name="c45e29952d26d8f69e04660d17e906ee"></a><!-- doxytag: member="Gosu::Graphics::endRecording" ref="c45e29952d26d8f69e04660d17e906ee" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::auto_ptr&lt;<a class="el" href="class_gosu_1_1_image_data.html">Gosu::ImageData</a>&gt; Gosu::Graphics::endRecording           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Finishes building the macro and returns it as a drawable object. 
<p>
Most usually, the return value is passed to <a class="el" href="class_gosu_1_1_image.html#c055237e043f147da45132de80b2caa0" title="Loads an image from a given filename that can be drawn onto graphics.">Image::Image()</a>. 
</div>
</div><p>
<a class="anchor" name="f6cdee3425e60ec8ffbc4f9ecb1b54ac"></a><!-- doxytag: member="Gosu::Graphics::flush" ref="f6cdee3425e60ec8ffbc4f9ecb1b54ac" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Gosu::Graphics::flush           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Flushes the Z queue to the screen and starts a new one. 
<p>
Useful for games that are *very* composite in nature (splitscreen). 
</div>
</div><p>
<a class="anchor" name="730cc192034ee1070b2017d41fe7e89e"></a><!-- doxytag: member="Gosu::Graphics::fullscreen" ref="730cc192034ee1070b2017d41fe7e89e" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Gosu::Graphics::fullscreen           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="f1db946f6dba8e88d7239e523382c98a"></a><!-- doxytag: member="Gosu::Graphics::height" ref="f1db946f6dba8e88d7239e523382c98a" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned Gosu::Graphics::height           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="e04842a3903999cf75b5789e4232dffd"></a><!-- doxytag: member="Gosu::Graphics::popTransform" ref="e04842a3903999cf75b5789e4232dffd" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Gosu::Graphics::popTransform           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Pops one transformation from the transformation stack. 
<p>

</div>
</div><p>
<a class="anchor" name="8fa36535a9c66917af002547d7f39b10"></a><!-- doxytag: member="Gosu::Graphics::pushTransform" ref="8fa36535a9c66917af002547d7f39b10" args="(const Transform &amp;transform)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Gosu::Graphics::pushTransform           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_gosu.html#fc543993017eada52ee25cbfaea7f53a">Transform</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>transform</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Pushes one transformation onto the transformation stack. 
<p>

</div>
</div><p>
<a class="anchor" name="dbfed3b65f3999f84f95128af572dc0b"></a><!-- doxytag: member="Gosu::Graphics::scheduleGL" ref="dbfed3b65f3999f84f95128af572dc0b" args="(const boost::function&lt; void()&gt; &amp;functor, ZPos z)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Gosu::Graphics::scheduleGL           </td>
          <td>(</td>
          <td class="paramtype">const boost::function&lt; void()&gt; &amp;&nbsp;</td>
          <td class="paramname"> <em>functor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_gosu.html#a2fd8fe9574c0ad3fd52557cb160be49">ZPos</a>&nbsp;</td>
          <td class="paramname"> <em>z</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
(Experimental) Schedules a custom GL functor to be executed at a certain Z level. 
<p>
The functor is called in a clean GL context (as given by beginGL/endGL). Gosu's rendering up to the Z level may not yet have been glFlush()ed. Note: Unlike normal drawing operations on the same Z level, the order of custom GL functors is NOT DEFINED. Note: You may not call any <a class="el" href="namespace_gosu.html" title="The library&#39;s main namespace.">Gosu</a> rendering functions from within the functor, and you must schedule it from within <a class="el" href="class_gosu_1_1_window.html#b3c5da8e60f81c0528a5d8d9495daac8" title="Called after every update and when the OS wants the window to repaint itself.">Window::draw</a>'s call tree. 
</div>
</div><p>
<a class="anchor" name="325c631eb7e8ec63171c803d2cd59f26"></a><!-- doxytag: member="Gosu::Graphics::setResolution" ref="325c631eb7e8ec63171c803d2cd59f26" args="(unsigned virtualWidth, unsigned virtualHeight)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Gosu::Graphics::setResolution           </td>
          <td>(</td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>virtualWidth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>virtualHeight</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="1e06d6eea03677546dd637e9b5b0b6bf"></a><!-- doxytag: member="Gosu::Graphics::width" ref="1e06d6eea03677546dd637e9b5b0b6bf" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned Gosu::Graphics::width           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_graphics_8hpp_source.html">Graphics.hpp</a></ul>
</div>
		<p class="footer">Documentation not clear enough? Please go to one of the places listed on <a href="http://www.libgosu.org/">http://www.libgosu.org/</a> and leave feedback. Thanks!</p>
		</div>
	</body>
</html>
