<html>
	<head>
		<title>Gosu C++ Reference</title>
		<link rel="stylesheet" href="cpp.css" type="text/css" charset="utf-8">
	</head>
	<body>
	<div class="everything">
<!-- Generated by Doxygen 1.5.9 -->
<script type="text/javascript">
<!--
function changeDisplayState (e){
  var num=this.id.replace(/[^[0-9]/g,'');
  var button=this.firstChild;
  var sectionDiv=document.getElementById('dynsection'+num);
  if (sectionDiv.style.display=='none'||sectionDiv.style.display==''){
    sectionDiv.style.display='block';
    button.src='open.gif';
  }else{
    sectionDiv.style.display='none';
    button.src='closed.gif';
  }
}
function initDynSections(){
  var divs=document.getElementsByTagName('div');
  var sectionCounter=1;
  for(var i=0;i<divs.length-1;i++){
    if(divs[i].className=='dynheader'&&divs[i+1].className=='dynsection'){
      var header=divs[i];
      var section=divs[i+1];
      var button=header.firstChild;
      if (button!='IMG'){
        divs[i].insertBefore(document.createTextNode(' '),divs[i].firstChild);
        button=document.createElement('img');
        divs[i].insertBefore(button,divs[i].firstChild);
      }
      header.style.cursor='pointer';
      header.onclick=changeDisplayState;
      header.id='dynheader'+sectionCounter;
      button.src='closed.gif';
      section.id='dynsection'+sectionCounter;
      section.style.display='none';
      section.style.marginLeft='14px';
      sectionCounter++;
    }
  }
}
window.onload = initDynSections;
-->
</script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.html"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.html"><span>File&nbsp;Members</span></a></li>
    </ul>
  </div>
<h1>Sockets.hpp</h1><a href="_sockets_8hpp.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 
<a name="l00003"></a>00003 
<a name="l00004"></a>00004 <span class="preprocessor">#ifndef GOSU_SOCKETS_HPP</span>
<a name="l00005"></a>00005 <span class="preprocessor"></span><span class="preprocessor">#define GOSU_SOCKETS_HPP</span>
<a name="l00006"></a>00006 <span class="preprocessor"></span>
<a name="l00007"></a>00007 <span class="preprocessor">#include &lt;boost/cstdint.hpp&gt;</span>
<a name="l00008"></a>00008 <span class="preprocessor">#include &lt;boost/function.hpp&gt;</span>
<a name="l00009"></a>00009 <span class="preprocessor">#include &lt;boost/scoped_ptr.hpp&gt;</span>
<a name="l00010"></a>00010 <span class="preprocessor">#include &lt;cstddef&gt;</span>
<a name="l00011"></a>00011 <span class="preprocessor">#include &lt;string&gt;</span>
<a name="l00012"></a>00012 
<a name="l00013"></a>00013 <span class="keyword">namespace </span>Gosu
<a name="l00014"></a>00014 {
<a name="l00016"></a><a class="code" href="namespace_gosu.html#e32efd2c73c3884c91c05d5c136d5485">00016</a>     <span class="keyword">typedef</span> boost::uint32_t <a class="code" href="namespace_gosu.html#e32efd2c73c3884c91c05d5c136d5485" title="Addresses are returned from and given to Gosu functions in host byte order.">SocketAddress</a>;
<a name="l00017"></a>00017 
<a name="l00019"></a><a class="code" href="namespace_gosu.html#ee6ccc5c098c8e63f50d9b4d2cea4e30">00019</a>     <span class="keyword">typedef</span> boost::uint16_t <a class="code" href="namespace_gosu.html#ee6ccc5c098c8e63f50d9b4d2cea4e30" title="Ports are returned from and given to Gosu functions in host byte order.">SocketPort</a>;
<a name="l00020"></a>00020     
<a name="l00023"></a><a class="code" href="namespace_gosu.html#ef707f47e12343f1cc2fbfe70a1143cf">00023</a>     <span class="keyword">const</span> <a class="code" href="namespace_gosu.html#ee6ccc5c098c8e63f50d9b4d2cea4e30" title="Ports are returned from and given to Gosu functions in host byte order.">SocketPort</a> <a class="code" href="namespace_gosu.html#ef707f47e12343f1cc2fbfe70a1143cf" title="Constant that can be used as a placeholder for an arbitrary port, e.g.">anyPort</a> = 0;
<a name="l00024"></a>00024     
<a name="l00029"></a>00029     <a class="code" href="namespace_gosu.html#e32efd2c73c3884c91c05d5c136d5485" title="Addresses are returned from and given to Gosu functions in host byte order.">SocketAddress</a> <a class="code" href="namespace_gosu.html#c2c5b3cca9903139efbd2d601a631ee6" title="Tries to convert a dotted IP4 string into an address suitable for socket functions...">stringToAddress</a>(<span class="keyword">const</span> std::string&amp; s);
<a name="l00031"></a>00031     std::string <a class="code" href="namespace_gosu.html#aae23447cebfab874d7657fbe0a8150e" title="Converts an address into a dotted IP4 string.">addressToString</a>(<a class="code" href="namespace_gosu.html#e32efd2c73c3884c91c05d5c136d5485" title="Addresses are returned from and given to Gosu functions in host byte order.">SocketAddress</a> address);
<a name="l00032"></a>00032 
<a name="l00037"></a><a class="code" href="class_gosu_1_1_message_socket.html">00037</a>     <span class="keyword">class </span><a class="code" href="class_gosu_1_1_message_socket.html" title="Wraps an UDP socket.">MessageSocket</a>
<a name="l00038"></a>00038     {
<a name="l00039"></a>00039         <span class="keyword">struct </span>Impl;
<a name="l00040"></a>00040         boost::scoped_ptr&lt;Impl&gt; pimpl;
<a name="l00041"></a>00041 
<a name="l00042"></a>00042     <span class="keyword">public</span>:
<a name="l00046"></a>00046         <span class="keyword">explicit</span> <a class="code" href="class_gosu_1_1_message_socket.html#7894acdea2e7dc85c671ca0f6732ccaf" title="Opens a message socket for listening at the specified port.">MessageSocket</a>(<a class="code" href="namespace_gosu.html#ee6ccc5c098c8e63f50d9b4d2cea4e30" title="Ports are returned from and given to Gosu functions in host byte order.">SocketPort</a> <a class="code" href="class_gosu_1_1_message_socket.html#38999d7a0fee723adcb21bf3a036be91" title="Returns the local port of the socket.">port</a>);
<a name="l00047"></a>00047         <a class="code" href="class_gosu_1_1_message_socket.html#19af8fa567af04eb7fe41b704521a595">~MessageSocket</a>();
<a name="l00048"></a>00048 
<a name="l00050"></a>00050         <a class="code" href="namespace_gosu.html#e32efd2c73c3884c91c05d5c136d5485" title="Addresses are returned from and given to Gosu functions in host byte order.">SocketAddress</a> <a class="code" href="class_gosu_1_1_message_socket.html#eadfbf7bbdcc2544a5aaa0d16efa2851" title="Returns the local address of the socket.">address</a>() <span class="keyword">const</span>;
<a name="l00052"></a>00052         <a class="code" href="namespace_gosu.html#ee6ccc5c098c8e63f50d9b4d2cea4e30" title="Ports are returned from and given to Gosu functions in host byte order.">SocketPort</a> <a class="code" href="class_gosu_1_1_message_socket.html#38999d7a0fee723adcb21bf3a036be91" title="Returns the local port of the socket.">port</a>() <span class="keyword">const</span>;
<a name="l00055"></a>00055         std::size_t <a class="code" href="class_gosu_1_1_message_socket.html#017cc2347921520ba834ef0ae1c31c11" title="Returns the maximum size, in bytes, of a packet that can be sent from this socket...">maxMessageSize</a>() <span class="keyword">const</span>;
<a name="l00056"></a>00056 
<a name="l00059"></a>00059         <span class="keywordtype">void</span> <a class="code" href="class_gosu_1_1_message_socket.html#3e642630d8b17d9336e3eb7112fa14dd" title="Collects all the packets that were sent to this socket and calls onReceive for each...">update</a>();
<a name="l00060"></a>00060 
<a name="l00063"></a>00063         <span class="keywordtype">void</span> <a class="code" href="class_gosu_1_1_message_socket.html#994ac62dc770243d65f88db89c1dc8e6" title="Sends something to the given port of the computer identified by the address.">send</a>(<a class="code" href="namespace_gosu.html#e32efd2c73c3884c91c05d5c136d5485" title="Addresses are returned from and given to Gosu functions in host byte order.">SocketAddress</a> address, <a class="code" href="namespace_gosu.html#ee6ccc5c098c8e63f50d9b4d2cea4e30" title="Ports are returned from and given to Gosu functions in host byte order.">SocketPort</a> port,
<a name="l00064"></a>00064             <span class="keyword">const</span> <span class="keywordtype">void</span>* buffer, std::size_t size);
<a name="l00065"></a>00065         <span class="comment">/*void broadcast(SocketPort port, const void* buffer,</span>
<a name="l00066"></a>00066 <span class="comment">            std::size_t size);*/</span>
<a name="l00067"></a>00067 
<a name="l00069"></a>00069         boost::function&lt;void (<a class="code" href="namespace_gosu.html#e32efd2c73c3884c91c05d5c136d5485" title="Addresses are returned from and given to Gosu functions in host byte order.">SocketAddress</a>, <a class="code" href="namespace_gosu.html#ee6ccc5c098c8e63f50d9b4d2cea4e30" title="Ports are returned from and given to Gosu functions in host byte order.">SocketPort</a>, <span class="keyword">const</span> <span class="keywordtype">void</span>*,
<a name="l00070"></a><a class="code" href="class_gosu_1_1_message_socket.html#946bf3cb838b105842ca86938c3a86ae">00070</a>             std::size_t)&gt; <a class="code" href="class_gosu_1_1_message_socket.html#946bf3cb838b105842ca86938c3a86ae" title="If assigned, will be called by update for every packet received.">onReceive</a>;
<a name="l00071"></a>00071     };
<a name="l00072"></a>00072     
<a name="l00075"></a><a class="code" href="namespace_gosu.html#b3663b1e82f7e3aaa65081e06f8f5871">00075</a>     <span class="keyword">enum</span> <a class="code" href="namespace_gosu.html#b3663b1e82f7e3aaa65081e06f8f5871" title="Defines the way in which data is collected until the onReceive event is called for...">CommMode</a>
<a name="l00076"></a>00076     {
<a name="l00077"></a><a class="code" href="namespace_gosu.html#b3663b1e82f7e3aaa65081e06f8f5871c5eac1ae7fa89b9a53d6c387e5ea74e1">00077</a>         <a class="code" href="namespace_gosu.html#b3663b1e82f7e3aaa65081e06f8f5871c5eac1ae7fa89b9a53d6c387e5ea74e1">cmRaw</a>,
<a name="l00078"></a>00078         <span class="comment">//cmLines,</span>
<a name="l00079"></a><a class="code" href="namespace_gosu.html#b3663b1e82f7e3aaa65081e06f8f58718da4ddc0cf3385c1a9c450d3c1ef89d3">00079</a>         <a class="code" href="namespace_gosu.html#b3663b1e82f7e3aaa65081e06f8f58718da4ddc0cf3385c1a9c450d3c1ef89d3">cmManaged</a>
<a name="l00080"></a>00080     };
<a name="l00081"></a>00081     
<a name="l00082"></a>00082     <span class="keyword">class </span>Socket;
<a name="l00083"></a>00083     
<a name="l00086"></a><a class="code" href="class_gosu_1_1_comm_socket.html">00086</a>     <span class="keyword">class </span><a class="code" href="class_gosu_1_1_comm_socket.html" title="Wraps a TCP socket that is used for one part of bi-directional communication.">CommSocket</a>
<a name="l00087"></a>00087     {
<a name="l00088"></a>00088         <span class="keyword">struct </span>Impl;
<a name="l00089"></a>00089         boost::scoped_ptr&lt;Impl&gt; pimpl;
<a name="l00090"></a>00090 
<a name="l00091"></a>00091     <span class="keyword">public</span>:
<a name="l00092"></a>00092         <a class="code" href="class_gosu_1_1_comm_socket.html#e94272e4f4f172f94f076caf31741b03">CommSocket</a>(<a class="code" href="namespace_gosu.html#b3663b1e82f7e3aaa65081e06f8f5871" title="Defines the way in which data is collected until the onReceive event is called for...">CommMode</a> <a class="code" href="class_gosu_1_1_comm_socket.html#5d1b6ec9ee13ae771a9f797082cd0d84">mode</a>, <a class="code" href="namespace_gosu.html#e32efd2c73c3884c91c05d5c136d5485" title="Addresses are returned from and given to Gosu functions in host byte order.">SocketAddress</a> targetAddress,
<a name="l00093"></a>00093             <a class="code" href="namespace_gosu.html#ee6ccc5c098c8e63f50d9b4d2cea4e30" title="Ports are returned from and given to Gosu functions in host byte order.">SocketPort</a> targetPort);
<a name="l00094"></a>00094         <a class="code" href="class_gosu_1_1_comm_socket.html#e94272e4f4f172f94f076caf31741b03">CommSocket</a>(<a class="code" href="namespace_gosu.html#b3663b1e82f7e3aaa65081e06f8f5871" title="Defines the way in which data is collected until the onReceive event is called for...">CommMode</a> mode, Socket&amp; socket);
<a name="l00095"></a>00095         <a class="code" href="class_gosu_1_1_comm_socket.html#fb9d93bd74197ac475f92bd5684ced65">~CommSocket</a>();
<a name="l00096"></a>00096 
<a name="l00097"></a>00097         <a class="code" href="namespace_gosu.html#e32efd2c73c3884c91c05d5c136d5485" title="Addresses are returned from and given to Gosu functions in host byte order.">SocketAddress</a> <a class="code" href="class_gosu_1_1_comm_socket.html#1c1993e15b47b7b5ce578c84d5fc9133">address</a>() <span class="keyword">const</span>;
<a name="l00098"></a>00098         <a class="code" href="namespace_gosu.html#ee6ccc5c098c8e63f50d9b4d2cea4e30" title="Ports are returned from and given to Gosu functions in host byte order.">SocketPort</a> <a class="code" href="class_gosu_1_1_comm_socket.html#e24fc55bf8bb843fdec1363699d87058">port</a>() <span class="keyword">const</span>;
<a name="l00099"></a>00099         <a class="code" href="namespace_gosu.html#e32efd2c73c3884c91c05d5c136d5485" title="Addresses are returned from and given to Gosu functions in host byte order.">SocketAddress</a> <a class="code" href="class_gosu_1_1_comm_socket.html#be1f2b3ea86a08abf4045adc75284579">remoteAddress</a>() <span class="keyword">const</span>;
<a name="l00100"></a>00100         <a class="code" href="namespace_gosu.html#ee6ccc5c098c8e63f50d9b4d2cea4e30" title="Ports are returned from and given to Gosu functions in host byte order.">SocketPort</a> <a class="code" href="class_gosu_1_1_comm_socket.html#a7e7ad8b5b0a4bbf2727e8c43a6e54db">remotePort</a>() <span class="keyword">const</span>;
<a name="l00101"></a>00101         <a class="code" href="namespace_gosu.html#b3663b1e82f7e3aaa65081e06f8f5871" title="Defines the way in which data is collected until the onReceive event is called for...">CommMode</a> <a class="code" href="class_gosu_1_1_comm_socket.html#5d1b6ec9ee13ae771a9f797082cd0d84">mode</a>() <span class="keyword">const</span>;
<a name="l00102"></a>00102 
<a name="l00103"></a>00103         <span class="keywordtype">bool</span> <a class="code" href="class_gosu_1_1_comm_socket.html#11fb9bca9287c2451af1b3438e06b695">connected</a>() <span class="keyword">const</span>;
<a name="l00104"></a>00104         <span class="keywordtype">void</span> <a class="code" href="class_gosu_1_1_comm_socket.html#8d44b126ebb1a4868cad6fa17c9f9149">disconnect</a>();
<a name="l00105"></a>00105         <span class="keywordtype">bool</span> <a class="code" href="class_gosu_1_1_comm_socket.html#ecf4076140ed2be91607f8a8099f72f0">keepAlive</a>() <span class="keyword">const</span>;
<a name="l00106"></a>00106         <span class="keywordtype">void</span> <a class="code" href="class_gosu_1_1_comm_socket.html#98c80f7b2d7155e2e4637ac2451a5069">setKeepAlive</a>(<span class="keywordtype">bool</span> value);
<a name="l00107"></a>00107 
<a name="l00108"></a>00108         <span class="keywordtype">void</span> <a class="code" href="class_gosu_1_1_comm_socket.html#974f25e5636374ff0101c49fd596067f">update</a>();
<a name="l00109"></a>00109         <span class="keywordtype">void</span> <a class="code" href="class_gosu_1_1_comm_socket.html#351e4619815ff2dee7dde5921d64424f">send</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* buffer, std::size_t size);
<a name="l00110"></a>00110         <span class="keywordtype">void</span> <a class="code" href="class_gosu_1_1_comm_socket.html#4978a857431eac3906e8306e60bfb8d5">sendPendingData</a>();
<a name="l00111"></a>00111         std::size_t <a class="code" href="class_gosu_1_1_comm_socket.html#94961a26865debd2d3a1c034112e0d6e">pendingBytes</a>() <span class="keyword">const</span>;
<a name="l00112"></a>00112 
<a name="l00113"></a><a class="code" href="class_gosu_1_1_comm_socket.html#3c153fbe66968e72f436c8fb2030f40c">00113</a>         boost::function&lt;void (const void*, std::size_t)&gt; <a class="code" href="class_gosu_1_1_comm_socket.html#3c153fbe66968e72f436c8fb2030f40c">onReceive</a>;
<a name="l00114"></a><a class="code" href="class_gosu_1_1_comm_socket.html#7a4cae80c492169c35fbfc5ace3fdf3f">00114</a>         boost::function&lt;void ()&gt; <a class="code" href="class_gosu_1_1_comm_socket.html#7a4cae80c492169c35fbfc5ace3fdf3f">onDisconnection</a>;
<a name="l00115"></a>00115     };
<a name="l00116"></a>00116     
<a name="l00119"></a><a class="code" href="class_gosu_1_1_listener_socket.html">00119</a>     <span class="keyword">class </span><a class="code" href="class_gosu_1_1_listener_socket.html" title="Wraps a TCP socket that waits on a specific port and can create CommSocket instances...">ListenerSocket</a>
<a name="l00120"></a>00120     {
<a name="l00121"></a>00121         <span class="keyword">struct </span>Impl;
<a name="l00122"></a>00122         boost::scoped_ptr&lt;Impl&gt; pimpl;
<a name="l00123"></a>00123 
<a name="l00124"></a>00124     <span class="keyword">public</span>:
<a name="l00125"></a>00125         <a class="code" href="class_gosu_1_1_listener_socket.html#62c238f846821aa8128a88012d9f0fa8">ListenerSocket</a>(<a class="code" href="namespace_gosu.html#ee6ccc5c098c8e63f50d9b4d2cea4e30" title="Ports are returned from and given to Gosu functions in host byte order.">SocketPort</a> <a class="code" href="class_gosu_1_1_listener_socket.html#cbdb21800f7648220484d2024b884219">port</a>);
<a name="l00126"></a>00126         <a class="code" href="class_gosu_1_1_listener_socket.html#99e365e2e69e4df39776b1514d28e079">~ListenerSocket</a>();
<a name="l00127"></a>00127 
<a name="l00128"></a>00128         <a class="code" href="namespace_gosu.html#e32efd2c73c3884c91c05d5c136d5485" title="Addresses are returned from and given to Gosu functions in host byte order.">SocketAddress</a> <a class="code" href="class_gosu_1_1_listener_socket.html#272a05b9d99da78a0dd3143db25ace8a">address</a>() <span class="keyword">const</span>;
<a name="l00129"></a>00129         <a class="code" href="namespace_gosu.html#ee6ccc5c098c8e63f50d9b4d2cea4e30" title="Ports are returned from and given to Gosu functions in host byte order.">SocketPort</a> <a class="code" href="class_gosu_1_1_listener_socket.html#cbdb21800f7648220484d2024b884219">port</a>() <span class="keyword">const</span>;
<a name="l00130"></a>00130 
<a name="l00131"></a>00131         <span class="keywordtype">void</span> <a class="code" href="class_gosu_1_1_listener_socket.html#d75c881ff327dd9a63acbbcbfc4cb9c0">update</a>();
<a name="l00132"></a>00132 
<a name="l00135"></a><a class="code" href="class_gosu_1_1_listener_socket.html#10650392418b684333d570d31ad5ba66">00135</a>         boost::function&lt;void (Socket&amp;)&gt; <a class="code" href="class_gosu_1_1_listener_socket.html#10650392418b684333d570d31ad5ba66" title="This signal is fired by update() whenever someone connects to the port which is currently...">onConnection</a>;
<a name="l00136"></a>00136     };
<a name="l00137"></a>00137 }
<a name="l00138"></a>00138 
<a name="l00139"></a>00139 <span class="preprocessor">#endif</span>
</pre></div></div>
		<p class="footer">Documentation not clear enough? Please go to one of the places listed on <a href="http://www.libgosu.org/">http://www.libgosu.org/</a> and leave feedback. Thanks!</p>
		</div>
	</body>
</html>
